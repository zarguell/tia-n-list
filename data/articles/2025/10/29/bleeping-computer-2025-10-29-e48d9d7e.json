{
  "id": "bleeping-computer-2025-10-29-e48d9d7e",
  "source_id": "bleeping-computer",
  "guid": "https://www.bleepingcomputer.com/news/security/wordpress-security-plugin-exposes-private-data-to-site-subscribers/",
  "title": "WordPress security plugin exposes private data to site subscribers",
  "url": "https://www.bleepingcomputer.com/news/security/wordpress-security-plugin-exposes-private-data-to-site-subscribers/",
  "published_at": "2025-10-29T20:44:00+00:00",
  "fetched_at": "2025-10-30T12:41:41.074665Z",
  "status": "processed",
  "content": {
    "raw": "The Anti-Malware Security and Brute-Force Firewall plugin for WordPress, installed on over 100,000 sites, has a vulnerability that allows subscribers to read any file on the server, potentially exposing private information. [...]",
    "full": "The Anti-Malware Security and Brute-Force Firewall plugin for WordPress, installed on over 100,000 sites, has a vulnerability that allows subscribers to read any file on the server, potentially exposing private information.\nThe plugin provides malware scanning and protection against brute-force attacks, exploitation of known plugin flaws, and against database injection attempts.\nIdentified as CVE-2025-11705, the vulnerability was reported to Wordfence by researcher Dmitrii Ignatyev and affects versions of the plugin 4.23.81 and earlier.\nThe issue stems from missing capability checks in the GOTMLS_ajax_scan() function, which processes AJAX requests using a nonce that attackers could obtain.\nThis oversight allows a low-privileged user, who can invoke the function, to read arbitrary files on the server, including sensitive data such as the wp-config.php configuration file that stores the database name and credentials.\nWith access to the database, an attacker can extract password hashes, users’ emails, posts, and other private data (and keys, salts for secure authentication).\nAlthough the severity of the vulnerability is not considered critical, because authentication is needed for exploitation, many websites allow users to subscribe and increase their access to various sections of the site, such as comments.\nSites that offer any kind of membership or subscription, allowing users to create accounts, meet the requirement, and are vulnerable to attacks exploiting CVE-2025-11705.\nWordfence has reported the issue to the vendor, Eli, along with a validated proof-of-concept exploit, through the WordPress.org Security Team, on October 14.\nOn October 15, the developer released version 4.23.83 of the plugin that addresses CVE-2025-11705 by adding a proper user capability check via a new ‘GOTMLS_kill_invalid_user()’ function.\nAccording to WordPress.org stats, roughly 50,000 website administrators have downloaded the latest version since its release, indicating that an equal number of sites are running a vulnerable version of the plugin.\nCurrently, Wordfence has not detected signs of exploitation in the wild, but applying the patch is strongly recommended, as the public disclosure of the issue may draw the attackers' attention.\nPicus Blue Report 2025 is Here: 2X increase in password cracking\n46% of environments had passwords cracked, nearly doubling from 25% last year.\nGet the Picus Blue Report 2025 now for a comprehensive look at more findings on prevention, detection, and data exfiltration trends.",
    "processed": ""
  },
  "analysis": {
    "score": 80,
    "relevance_score": 85,
    "threat_category": "Vulnerability / Privilege Escalation / Data Exposure",
    "summary": "A vulnerability (CVE-2025-11705) in the Anti-Malware Security and Brute-Force Firewall WordPress plugin allows authenticated subscribers to read arbitrary files on the server, risking exposure of sensitive data including database credentials.",
    "key_entities": [
      "Anti-Malware Security and Brute-Force Firewall plugin",
      "WordPress",
      "Dmitrii Ignatyev",
      "Wordfence",
      "CVE-2025-11705"
    ],
    "ttps": [
      "Missing capability checks in AJAX scan function",
      "Exploitation via authenticated subscriber accounts",
      "Arbitrary file read on server",
      "Potential exposure of wp-config.php and database credentials"
    ]
  },
  "content_source": "enhanced",
  "content_fetch_method": "trafilatura",
  "processing_metadata": {
    "processed_at": "2025-10-30T12:43:55.665769+00:00Z",
    "llm_provider": "unknown",
    "processing_method": "json_processing"
  },
  "updated_at": "2025-10-30T12:43:55.665934Z"
}