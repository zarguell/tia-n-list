{
  "id": "zdnet-security-2025-10-29-45ce984c",
  "source_id": "zdnet-security",
  "guid": "a12d00c0-e72b-4db9-8b7a-8570480dc1f1",
  "title": "6 essential rules for unleashing AI on your software development process - and the No. 1 risk",
  "url": "https://www.zdnet.com/article/6-essential-rules-for-unleashing-ai-on-your-software-development-process-and-the-no-1-risk/",
  "published_at": "2025-10-29T14:48:52+00:00",
  "fetched_at": "2025-10-29T17:53:54.841249Z",
  "status": "rejected",
  "content": {
    "raw": "AI is reshaping Agile development. Here's how teams can boost productivity and quality while avoiding the biggest risks.",
    "full": "6 essential rules for unleashing AI on your software development process - and the No. 1 risk\nFollow ZDNET: Add us as a preferred source on Google.\nZDNET's key takeaways\n- Pressure grows for software better aligned with business.\n- Agile techniques have been stagnant for a decade.\n- AI may speed up Agile team output.\nAgile has always had the best intentions: work side by side with the business to cooperatively build software that actually works, versus confining development to technically driven, siloed projects.\nOf course, in practice, things didn't always go smoothly. Agile didn't scale too well to large groups or organizations, for one. Organizational politics and inertia often got in the way of this sought-after utopian business-IT alignment.\nAlso: GitHub's new Agent HQ gives devs a command center for all their AI tools - why this is a huge deal\nCan AI help make Agile, well, more agile? That's the hope.\nThat hope is reflected in Digital.ai's 18th State of Agile Report, which says AI and AI agents are speeding up -- and potentially improving the quality of -- the building and delivery of software. And not a moment too soon -- technology teams are under relentless pressure to increase the ROI of their products, as well as innovation in said software. The survey's authors gathered insights from nearly 350 participants, primarily Agile coaches and consultants from large enterprises with more than 20,000 employees.\nIn terms of adoption, Agile methodologies have been stuck on a plateau for nearly a decade. In previous Digital.ai surveys, a consistent majority (between 52% and 60%) said their organizations were \"using Agile practices but still maturing,\" and only around one in ten reported a high level of competency across their organizations.\nAlso: Why open source may not survive the rise of generative AI\nThose numbers have not changed in nearly a decade, and this year is no exception -- just 13% say Agile is deeply embedded across business and technology, while 42% describe their culture as \"better than nothing but could be more effective.\" Agile is \"damned with faint praise at the exact moment when organizations need it most.\"\nThat's because more than three in four tech managers (76%) cite increased scrutiny on the business impact and ROI of Agile. Only 49% have guardrails in place as AI adoption accelerates faster than oversight.\nThe hope is AI is moving from simply a supportive tool to an orchestrator of the full software delivery lifecycle. \"Rather than simply assisting teams, these systems can reason, decide, and act autonomously to improve flow, quality, and speed at scale,\" the report states.\nToo optimistic? Industry experts and observers are skeptical about how far AI can go in improving the software development and delivery process in unison with the business.\nAlso: What Bill Gates really said about AI replacing coding jobs\n\"AI is not something you can pull out of your toolbox and expect magical things to happen,\" cautioned Andrew Kum-Seun, research director at Info-Tech Research Group. \"At least, not right now. IT managers must be prepared to address the human, workflow, and technical implications that naturally come with AI while being honest about what AI can do today for their organization.\"\nIn other words, get your AI implementation in order before you attempt to apply it to getting your software development in order.\n\"Will it be a productivity tool or something more?\" Kum-Seun continued. \"Then, managers must be equipped with the right tools and tactics to help teams overcome their fears, uncertainties, and doubts. Ultimately, we want to wade into the water and not dive in without swimming lessons.\"\nHere are some guidelines for bringing AI in to boost Agile software efforts:\n1. Remember, it's still early\nKum-Seun reported his firm has yet to see widespread adoption of AI agents performing autonomous activities in the software development lifecycle (SDLC). \"Much of the value and successes we see today are at the individual, task level, where AI complements human team members.\"\n2. Start small and prepare\nStart small by \"piloting low-risk processes like test generation and documentation before exposing live code or customer data,\" advised ZbynÄ›k Sopuch, chief technology officer of Safetica.\nAlso: The best free AI courses and certificates in 2025 - and I've tried them all\n\"A rule of thumb before unleashing AI on any process is to locate, examine, and then map out the sources of all the data across the organization, including code, logs, tickets, and customers, and determine what is off-limits. Part of the strategy should include 'govern first, then scale': create a policy for what's allowed before adding more tools or users.\"\n3. Decide what can be improved by AI\nWhat areas of SDLC management can be enhanced through AI-driven Agile practices?\n\"There is a lot of upside with AI, particularly with addressing tickets, including backlog analysis, sorting by impact, and surfacing priorities, which means developers can stay focused on pressing areas,\" said Sopuch. \"Additionally, AI enables smarter test creation by writing test cases tied directly to requirements or prior bugs, thus improving coverage and traceability.\"\nAlso: Need the best AI content detector in 2025? Try these four tools (you probably already use one)\nDocumentation is also vastly improved with AI \"with its ability to draft pull request summaries, user notes, and release updates automatically from the code's version history,\" Sopuch added.\nAI also helps clearly show teams bottlenecks in software delivery, \"empowering teams to fix those issues and patterns faster,\" he added. \"Additionally, AI-driven dashboards and summaries allow for not only cross-team visibility but also the ability for less technical organization members to understand and engage in these processes.\"\n4. Keep humans in the loop\nAs Agile is meant to maintain humanity in software development, AI needs to support this vision. This must be a core component of AI-driven Agile development as well. \"If leaders are unable to bridge their intent for AI with the team's concerns, they will likely see improper use of AI and, perhaps, deliberate sabotage in its implementation,\" said Kum-Seun.\nAlso: The best AI for coding in 2025 (including a new winner - and what not to use)\nAnother important step is to \"keep all AI explainable by ensuring the use of AI tools that clearly cite where their suggestions come from -- no black-box code that cannot be simply verified,\" said Sopuch.\n\"Human oversight is a required step. AI can write and refactor code, but humans absolutely must approve merges, product pushes, or any exceptions. Everything in the process must be logged, including prompts, outputs, and approvals so that an audit can easily take place on demand.\"\n5. AI-enhanced agile still follows the rules of software development\n\"I have seen many silver bullets, like Agile and AI, which have come and gone over the years,\" observed Laura Zuber, training and customer support manager for Quantitative Software Management Inc. \"Some have measurably improved software development productivity. However, the fundamentals of software development remain the same. It is challenging.\"\nAlso: I did 24 days of coding in 12 hours with a $20 AI tool - but there's one big pitfall\nIT managers and professionals \"need to understand that implementing any software process improvement, which AI is, will cause productivity to decrease initially,\" said Zuber.\n\"Productivity gains will be realized once developers become proficient at prompting and teaching their select AI tool or agent. The developers must have enough experience to recognize bad and irrelevant code and continue to work with the AI agent until it learns what they need or are looking for.\"\n6. Know the risks\nThe top risk in incorporating AI into the Agile development process is the same as most other AI initiatives -- potential data exposure, said Sopuch.\n\"Developers can accidentally include sensitive data in prompts that get sent to external AI tools, such as API keys, credentials, and customer data. Shadow AI is also a risk, especially when it comes to SDLC management. By nature, people will look for solutions to make their jobs easier, and in this case, employees may install or use unapproved or unvetted AI tools with no IT visibility, creating compliance and governance risks.\"\nAlso: How AI coding agents could destroy open source software\nThis AI-driven Agile wave is fundamentally different from all the waves before -- such as waterfall, DevOps, automation in the cloud, and mobile revolutions, according to the Digital.ai report. \"Agentic AI is not a new tool; it's a new teammate. It brings awareness and adaptability to every stage of delivery, creating systems that learn from each interaction and continuously improve flow, quality, and security.\"\nWant more stories about AI? Check out AI Leaderboard, our weekly newsletter.",
    "processed": ""
  },
  "analysis": {
    "score": null,
    "relevance_score": null,
    "threat_category": null,
    "summary": null,
    "key_entities": [],
    "ttps": []
  },
  "content_source": "enhanced",
  "content_fetch_method": "trafilatura",
  "processing_metadata": {},
  "updated_at": "2025-10-29T17:59:52.743616Z"
}