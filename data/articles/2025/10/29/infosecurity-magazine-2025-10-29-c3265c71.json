{
  "id": "infosecurity-magazine-2025-10-29-c3265c71",
  "source_id": "infosecurity-magazine",
  "guid": "https://www.infosecurity-magazine.com/news/npm-malware-invisible-dependencies/",
  "title": "Npm Malware Uses Invisible Dependencies to Infect Dozens of Packages",
  "url": "https://www.infosecurity-magazine.com/news/npm-malware-invisible-dependencies/",
  "published_at": "2025-10-29T14:00:00+00:00",
  "fetched_at": "2025-10-29T17:55:16.144847Z",
  "status": "processed",
  "content": {
    "raw": "The ongoing ‘PhantomRaven’ malicious campaign has infected 126 npm packages to date, representing 86,000 downloads",
    "full": "An ongoing npm credential harvesting campaign operating since August 2025 has been discovered by researchers at Koi Security.\nThe malware, dubbed PhantomRaven by the researchers, is actively stealing npm tokens, GitHub credentials and CI/CD secrets from developers worldwide, with 126 npm packages infected, totalling 86,434 downloads.\nAt least 80 of them were still active when the Koi Security report was published on October 29.\nWhile the attacker’s infrastructure was described in the report as “surprisingly sloppy” because a simple analysis led the researchers to a single individual, they commented that the delivery mechanism is “clever.”\nRemote Dynamic Dependencies Technique Explained\nThe attacker uses Remote Dynamic Dependencies (RDD) to hide malicious code in externally hosted packages fetched at install time via HTTP URLs, bypassing npm’s security scans and dependency analysis by appearing as a clean, dependency-free package.\nThis technique evades detection by loading the payload only when the victim runs npm install, pulling it from an attacker-controlled server instead of the npm registry.\nSince the dependency is fetched fresh for every install from an attacker-controlled server, the attacker can dynamically tailor payloads, serving clean code to researchers, delayed malware to high-value targets or even geofenced attacks, all while npm’s cache-free design ensures victims always get the latest – and most dangerous – version.\nMalicious Npm Packages Exploit AI ‘Slopsquatting’\nThe package names in the PhantomRaven campaign also use typosquats crafted to exploit the tendency of large language models (LLM), hallucinations.\n“When developers ask AI assistants like GitHub Copilot or ChatGPT for package recommendations, the models sometimes suggest plausible-sounding package names that don't actually exist. PhantomRaven created those non-existent packages,” the Koi Security researchers explained.\nThis technique is commonly known as slopsquatting.\n“PhantomRaven demonstrates how sophisticated attackers are getting at exploiting blind spots in traditional security tooling. Remote Dynamic Dependencies aren't visible to static analysis. AI hallucinations create plausible-sounding package names that developers trust. And lifecycle scripts execute automatically, without any user interaction,” concluded the researchers.\nThe Koi Security report provided a list of the compromised npm packages as well as details on the attacker’s infrastructure.\nRead now: Npm Package Hijacked to Steal Data and Crypto via AI-Powered Malware",
    "processed": ""
  },
  "analysis": {
    "score": 90,
    "relevance_score": 95,
    "threat_category": "Supply Chain Malware / Credential Theft",
    "summary": "Koi Security uncovered the PhantomRaven malware campaign that infects npm packages via Remote Dynamic Dependencies, stealing npm tokens, GitHub credentials, and CI/CD secrets. The campaign has infected 126 packages with over 86,000 downloads.",
    "key_entities": [
      "PhantomRaven",
      "Koi Security",
      "npm",
      "GitHub",
      "CI/CD",
      "Remote Dynamic Dependencies",
      "RDD",
      "126 packages",
      "86,434 downloads"
    ],
    "ttps": [
      "Supply Chain Attack",
      "Credential Harvesting",
      "Remote Dynamic Dependencies",
      "Dynamic Payload Delivery",
      "Geofenced Attacks"
    ]
  },
  "content_source": "enhanced",
  "content_fetch_method": "trafilatura",
  "processing_metadata": {
    "processed_at": "2025-10-29T18:00:14.961740+00:00Z",
    "llm_provider": "unknown",
    "processing_method": "json_processing"
  },
  "updated_at": "2025-10-29T18:00:14.962447Z"
}