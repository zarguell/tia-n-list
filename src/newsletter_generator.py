"""Newsletter generation module for Tia N. List project.

This module generates HTML newsletters from top articles for distribution
via the Beehiiv API.
"""

import datetime
from pathlib import Path
from src import persona


def generate_newsletter() -> bool:
    """Generate HTML newsletter from top articles.

    Returns:
        True if successful, False otherwise.
    """
    print("Generating newsletter...")

    try:
        # Get top articles for newsletter
        articles = persona.get_top_articles_for_summary(limit=7)

        if not articles:
            print("No articles found for newsletter")
            return False

        # Generate joke of the day
        joke = persona.fetch_joke_of_the_day()

        # Create HTML newsletter content
        newsletter_html = f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Daily Threat Intelligence Newsletter - {datetime.datetime.now().strftime('%Y-%m-%d')}</title>
    <style>
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }}
        .header {{
            text-align: center;
            border-bottom: 2px solid #e74c3c;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }}
        .logo {{
            font-size: 24px;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 10px;
        }}
        .date {{
            color: #666;
            font-size: 14px;
        }}
        .content {{
            margin-bottom: 40px;
        }}
        .article {{
            border-left: 3px solid #e74c3c;
            padding-left: 20px;
            margin-bottom: 25px;
        }}
        .article-title {{
            font-size: 18px;
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }}
        .article-source {{
            font-size: 14px;
            color: #666;
            font-style: italic;
            margin-bottom: 10px;
        }}
        .article-summary {{
            font-size: 13px;
            line-height: 1.5;
            color: #555;
        }}
        .joke-section {{
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            margin: 30px 0;
            text-align: center;
        }}
        .joke-title {{
            font-size: 16px;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 10px;
        }}
        .joke-content {{
            font-style: italic;
            color: #555;
        }}
        .footer {{
            text-align: center;
            border-top: 2px solid #e74c3c;
            padding-top: 20px;
            color: #666;
            font-size: 12px;
        }}
        .relevance-emoji {{
            font-size: 14px;
        }}
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">üõ°Ô∏è Tia N. List</div>
        <div class="date">{datetime.datetime.now().strftime('%B %d, %Y')}</div>
    </div>

    <div class="content">
"""

        # Add top articles
        for i, article in enumerate(articles, 1):
            relevance_emoji = "üî¥" if article['score'] < 30 else "üü°" if article['score'] < 70 else "üü¢" if article['score'] < 90 else "üü¢"

            newsletter_html += f"""        <div class="article">
            <div class="article-title">{relevance_emoji} {article['title']}</div>
            <div class="article-source">Source: {article.get('source', 'Unknown')}</div>
            <div class="article-summary">{article.get('summary', 'No summary available')[:300]}</div>
            <a href="{article['url']}" style="color: #e74c3c; text-decoration: none;">Read full analysis ‚Üí</a>
        </div>
"""

        # Add joke section
        if joke:
            newsletter_html += f"""
    <div class="joke-section">
        <div class="joke-title">üìù Today's Cybersecurity Wisdom</div>
        <div class="joke-content">{joke}</div>
    </div>
"""

        newsletter_html += f"""    </div>

    <div class="footer">
        <p><strong>Generated by Tia N. List - Your AI-powered Threat Intelligence Analyst</strong></p>
        <p>Automated from {len(articles)} articles | Relevance-scoring by AI | Published daily at 6:00 AM UTC</p>
    </div>
</body>
</html>
"""

        # Create newsletters directory if it doesn't exist
        newsletters_dir = Path("hugo/newsletters")
        newsletters_dir.mkdir(parents=True, exist_ok=True)

        # Create filename with date
        filename = f"newsletter-{datetime.datetime.now().strftime('%Y-%m-%d')}.html"
        filepath = newsletters_dir / filename

        # Write newsletter
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(newsletter_html)

        print(f"‚úÖ Newsletter generated: {filename}")
        print(f"üìä HTML length: {len(newsletter_html)} characters")

        return True

    except Exception as e:
        print(f"‚úó Error generating newsletter: {e}")
        return False


if __name__ == "__main__":
    generate_newsletter()